{
  "name": "vscode-mono-workspace",
  "displayName": "Mono Workspace",
  "description": "Manage monorepos with multi-root workspaces. Supports Cargo, NX, Lerna, Yarn, Pnpm, Rushjs and recursive package directories",
  "version": "1.3.5",
  "publisher": "melMass",
  "repository": "http://github.com/mtb-tools/vscode-mono-workspace",
  "license": "MIT",
  "engines": {
    "vscode": ">=1.63.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "workspace",
    "monorepo",
    "project",
    "yarn",
    "folder",
    "nx",
    "cargo"
  ],
  "activationEvents": [
    "workspaceContains:**/package.json",
    "workspaceContains:**/Cargo.toml",
    "workspaceContains:**/nx.json",
    "onCommand:mono-workspace.openPackageCurrentWindow",
    "onCommand:mono-workspace.openPackageNewWindow",
    "onCommand:mono-workspace.openPackageWorkspaceFolder",
    "onCommand:mono-workspace.select",
    "onCommand:mono-workspace.updateAll"
  ],
  "main": "./out/extension.js",
  "icon": "images/icon.png",
  "contributes": {
    "commands": [
      {
        "command": "mono-workspace.openPackageCurrentWindow",
        "title": "Monorepo: Open Package (Current Window)"
      },
      {
        "command": "mono-workspace.save_set",
        "title": "Monorepo: Save Current Set"
      },
      {
        "command": "mono-workspace.openPackageNewWindow",
        "title": "Monorepo: Open Package (New Window)"
      },
      {
        "command": "mono-workspace.openPackageWorkspaceFolder",
        "title": "Monorepo: Open Package (Workspace Folder)"
      },
      {
        "command": "mono-workspace.select",
        "title": "Monorepo: Select Workspace Folders"
      },
      {
        "command": "mono-workspace.updateAll",
        "title": "Monorepo: Sync Workspace Folders"
      }
    ],
    "configuration": {
      "title": "Mono Workspace",
      "properties": {
        "monoWorkspace.includeRoot": {
          "type": "boolean",
          "default": true,
          "description": "Inlcude the top-level monorepo root path as a workspace folder"
        },
        "monoWorkspace.sets": {
          "type": "array",
          "default": [],
          "description": "Predefined sets of workspaces. Usually defined in the monorepo root vscode setting file"
        },
        "monoWorkspace.providers_suffix": {
          "type": "boolean",
          "default": true,
          "description": "Append the provider source to project names."
        },
        "monoWorkspace.fetch_descriptions": {
          "type": "boolean",
          "default": true,
          "description": "Tries to get the descriptions from packages."
        },
        "monoWorkspace.providers.cargo": {
          "type": "boolean",
          "default": true,
          "description": "Resolve projects from Cargo workspace members."
        },
        "monoWorkspace.providers.core": {
          "type": "boolean",
          "default": true,
          "description": "Resolve projects from Lerna, Yarn, Pnpm, Rushjs, and recursive package discovery."
        },
        "monoWorkspace.providers.nx": {
          "type": "boolean",
          "default": true,
          "description": "Resolve projects from NX Workspace"
        },
        "monoWorkspace.folders.regex.apps": {
          "type": "string",
          "default": "^app|web|api|frontend|backend",
          "description": "Regex to match app-like package paths"
        },
        "monoWorkspace.folders.prefix.apps": {
          "type": "string",
          "default": "üöÄ ",
          "description": "Folder prefix for apps"
        },
        "monoWorkspace.folders.regex.libs": {
          "type": "string",
          "default": "^common|package|lib|private",
          "description": "Regex to match library-like package paths"
        },
        "monoWorkspace.folders.prefix.libs": {
          "type": "string",
          "default": "üì¶ ",
          "description": "Folder prefix for libraries"
        },
        "monoWorkspace.folders.regex.tools": {
          "type": "string",
          "default": "^tool|script|util",
          "description": "Regex to match tool-like package paths"
        },
        "monoWorkspace.folders.prefix.tools": {
          "type": "string",
          "default": "‚öôÔ∏è ",
          "description": "Folder prefix for tools"
        },
        "monoWorkspace.folders.prefix.unknown": {
          "type": "string",
          "default": "",
          "description": "Folder prefix for unknown packages"
        },
        "monoWorkspace.folders.prefix.root": {
          "type": "string",
          "default": "‚ú® ",
          "description": "Folder prefix for the root folder"
        },
        "monoWorkspace.folders.custom": {
          "type": "array",
          "default": [],
          "description": "An array of custom 'regex/prefix' pairs like: [{regex:'foo', prefix:'bar'}, {regex:'fffoo', prefix:'bbbar'}]"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run compile",
    "compile": "node build.mjs && pnpm postcompile",
    "postcompile": "du -hs out/extension.js",
    "compile:dev": "node build.mjs",
    "lint": "eslint src --ext ts",
    "pretest": "pnpm run compile && pnpm run lint",
    "test": "node ./out/test/run-test.js",
    "package": "vsce package",
    "package:install": "vsce package && code --install-extension ./*vsix",
    "release": "[[ $FORCE -eq 1 ]] && vsce package && vsce publish || echo 'Sure you dont want to run pre? Else preprend FORCE=1 to the command'",
    "release:pre": "vsce package --pre-release && vsce publish --pre-release"
  },
  "devDependencies": {
    "@types/glob": "7.1.3",
    "@types/lodash": "^4.14.186",
    "@types/mocha": "8.2.1",
    "@types/node": "14.14.31",
    "@types/vscode": "1.53.0",
    "@typescript-eslint/eslint-plugin": "5.40.0",
    "@typescript-eslint/parser": "5.40.0",
    "devmoji": "2.2.0",
    "esbuild": "^0.15.10",
    "eslint": "8.25.0",
    "eslint-config-prettier": "8.1.0",
    "eslint-plugin-chai-expect": "3.0.0",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-jest": "27.1.1",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-prettier": "3.3.1",
    "eslint-plugin-promise": "4.3.1",
    "eslint-plugin-unicorn": "44.0.2",
    "glob": "7.1.6",
    "husky": "5.1.1",
    "mocha": "10.0.0",
    "prettier": "2.2.1",
    "typescript": "4.8.4",
    "vsce": "^2.11.0",
    "@vscode/test-electron": "1.6.1",
    "nx": "14.8.4"
  },
  "dependencies": {
    "jsonc": "^2.0.0",
    "toml": "^3.0.0",
    "lodash": "^4.17.21",
    "@nrwl/devkit": "14.8.4",
    "tslib": "2.1.0",
    "ultra-runner": "3.10.5"
  }
}
